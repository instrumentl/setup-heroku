name: 'Set up Heroku'
description: 'Set up the Heroku CLI'
inputs:
  version:
    description: "Version to install"
    required: true
    default: "latest"
runs:
  using: "composite"
  steps:
  - name: "Ensure dependencies are installed"
    shell: bash
    run: |
      if ! command -v gpg; then sudo -n apt-get install --no-install-recommends gnupg2 ; fi
      if ! command -v curl; then sudo -n apt-get install --no-install-recommends curl ; fi
      if ! command -v jq; then sudo -n apt-get install --no-install-recommends jq ; fi
  - name: "Determine download url"
    id: get_url
    shell: bash
    env:
      version: ${{ inputs.version }}
    run: |
      set -euo pipefail

      wd="$(mktemp -d)"
      on_exit() {
        status=$?
        [[ -n "$wd" ]] && rm -rf "$wd"
        exit $status
      }

      trap on_exit EXIT INT TERM
      raw_machine="$(uname -m)"
      if [[ "$raw_machine" = "aarch64" ]]; then
        machine="arm"
      elif [[ "$raw_machine" = "x86_64" ]]; then
        machine="x64"
      else
        echo >&2 "Unhandled machine type $raw_machine"
        exit 1
      fi

      curl -fqs -o "$wd/versions.json" "https://cli-assets.heroku.com/versions/heroku-linux-${machine}-tar-gz.json"
      if [[ "$version" = "latest" ]]; then
        url="https://cli-assets.heroku.com/channels/stable/heroku-linux-${machine}.tar.gz"
      else
        url="$(jq -cr '.["'"${version}"'"]' < "$wd/versions.json")"
      fi
      if [[ -z "$url" ]] || [[ "$url" = "null" ]]; then
        echo >&2 "Could not find download for ${version} for ${machine}"
        exit 1
      fi
  - name: Cache CLI
    id: cache-cli
    uses: actions/cache@v4
    with:
      path: /tmp/heroku-${{ inputs.version }}.tar.gz
      key: ${{ runner.os }}-${{ runner.arch }}-${{ steps.get_url.outputs.url }}
  - name: "Download CLI"
    if: steps.cache.outputs.cache-hit != 'true'
    run: |
      curl -o "/tmp/heroku-${{ inputs.version }}.tar.gz" -sq "${{ steps.get_url.outputs.url }}"
  - name: "Install Heroku CLI"
    shell: bash
    run: |
      set -euo pipefail

      sudo -n rm -rf /usr/local/lib/heroku
      sudo -n mkdir -p /usr/local/lib/heroku
      sudo -n tar -C /usr/local/lib -xpzf "/tmp/heroku-${{ inputs.version }}.tar.gz"
      sudo -n rm -f /usr/local/bin/heroku
      sudo -n ln -s /usr/local/lib/heroku/bin/heroku /usr/local/bin/heroku

      /usr/local/lib/heroku/bin/node -v || sudo -n rm /usr/local/lib/heroku/bin/node
  - name: "Test that it runs correctly"
    run: "heroku version"
    shell: bash
